<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxAvatar_SMS.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cPPwvx+XPFT98Xf/2Q==
</value>
  </data>
</root>